@model LoginsViewModel

@{
    ViewData["Title"] = "Logins";
}


<div class="row">
    <div class="col-md-2">
        <section>
            <h4>Filters</h4>
            <form asp-action="Index" method="get">
                <div class="form-group">
                    <label>Login name</label>
                    <input class="form-control form-control-sm" name="LoginName" value="@Model.LoginNameFilter" />
                </div>

                <div class="form-group">
                    <label>Identity name</label>
                    <input class="form-control form-control-sm" name="IdentityName" value="@Model.IdentityNameFilter" />
                </div>

                <div class="form-group">
                    <label>First name</label>
                    <input class="form-control form-control-sm" name="FirstName" value="@Model.FirstNameFilter" />
                </div>

                <div class="form-group">
                    <label>Last name</label>
                    <input class="form-control form-control-sm" name="LastName" value="@Model.LastNameFilter" />
                </div>

                <div class="form-group">                   
                    <button type="submit" class="btn btn-primary">Search</button>
                </div>
            </form>
        </section>      
    </div>
    <div class="col-md-10">
        <section>
            
            <form id="rolesForm">  
                <h4 id="rolesFormHeader">Roles</h4>
                <fieldset disabled>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="checkbox" id="isUserCheckBox" name="isUser">
                        <label class="form-check-label" for="isUserCheckBox">User</label>
                    </div>

                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="checkbox" id="isManagerCheckBox" name="isManager">
                        <label class="form-check-label" for="isManagerCheckBox">Manager</label>
                    </div>

                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="checkbox" id="isAdminCheckBox" name="isAdmin">
                        <label class="form-check-label" for="isAdminCheckBox">Admin</label>
                    </div>

                    <div class="form-group form-check-inline">
                        <button id="rolesFormSubmit" type="button" class="btn btn-primary">Update</button>
                    </div>

                    <input class="invisible" type="text" id="rolesLoginName" name="loginName">

                </fieldset>
            </form>
        </section>
        <section>
            <h4>@ViewData["Title"]</h4>
            <table id="loginsTable" class="table table-hover">
                <thead>
                    <tr>
                        <th>
                            <a asp-action="Index"
                               asp-route-orderBy="LoginName@(Model.LoginNameOrder)"
                               asp-route-loginName="@Model.LoginNameFilter"
                               asp-route-identityName="@Model.IdentityNameFilter"
                               asp-route-firstName="@Model.FirstNameFilter"
                               asp-route-lastName="@Model.LastNameFilter">Login name</a>
                        </th>
                        <th>
                            <a asp-action="Index"
                               asp-route-orderBy="IdentityName@(Model.IdentityNameOrder)"
                               asp-route-loginName="@Model.LoginNameFilter"
                               asp-route-identityName="@Model.IdentityNameFilter"
                               asp-route-firstName="@Model.FirstNameFilter"
                               asp-route-lastName="@Model.LastNameFilter">Id name</a>
                        </th>
                        <th>
                            <a asp-action="Index"
                               asp-route-orderBy="FirstName@(Model.FirstNameOrder)"
                               asp-route-loginName="@Model.LoginNameFilter"
                               asp-route-identityName="@Model.IdentityNameFilter"
                               asp-route-firstName="@Model.FirstNameFilter"
                               asp-route-lastName="@Model.LastNameFilter">First name</a>
                        </th>
                        <th>
                            <a asp-action="Index"
                               asp-route-orderBy="LastName@(Model.LastNameOrder)"
                               asp-route-loginName="@Model.LoginNameFilter"
                               asp-route-identityName="@Model.IdentityNameFilter"
                               asp-route-firstName="@Model.FirstNameFilter"
                               asp-route-lastName="@Model.LastNameFilter">Last name</a>
                        </th>
                </thead>

                <tbody>

                    @foreach (var login in Model.Items)
                    {
                        <tr>
                            <td>@login.LoginName</td>
                            <td>@login.IdentityName</td>
                            <td>@login.FirstName</td>
                            <td>@login.LastName</td>
                            @*<td><a asp-area="Identity" asp-controller="Roles" asp-action="Index" asp-route-loginName="@login.LoginName">Roles</a></td>*@
                        </tr>
                    }
                </tbody>

            </table>

            @{
                var prevDisabled = !(Model.Items.PageIndex > 1) ? "disabled" : "";
                var nextDisabled = !(Model.Items.PageIndex < Model.Items.TotalPages) ? "disabled" : "";

            }

            @if (Model.Items.TotalPages > 2)
            {
                int startPage = Math.Max(1, Model.Items.PageIndex - 5);
                int endPage = Math.Min(Model.Items.TotalPages, startPage + 10);

                for (int i = startPage; i <= endPage; i++)
                {
                    <a asp-action="Index"
                       asp-route-orderBy="@Model.OrderBy"
                       asp-route-pageIndex="@i"
                       asp-route-loginName="@Model.LoginNameFilter"
                       asp-route-identityName="@Model.IdentityNameFilter"
                       asp-route-firstName="@Model.FirstNameFilter"
                       asp-route-lastName="@Model.LastNameFilter"
                       class="link-primary">@i</a>
                }
            }
            
            <a asp-action="Index"
               asp-route-orderBy="@Model.OrderBy"
               asp-route-pageIndex="@(Model.Items.PageIndex - 1)"
               asp-route-loginName="@Model.LoginNameFilter"
               asp-route-identityName="@Model.IdentityNameFilter"
               asp-route-firstName="@Model.FirstNameFilter"
               asp-route-lastName="@Model.LastNameFilter"
               class="btn btn-default float-right @prevDisabled">Previous</a>
            <a asp-action="Index"
               asp-route-orderBy="@Model.OrderBy"
               asp-route-pageIndex="@(Model.Items.PageIndex + 1)"
               asp-route-loginName="@Model.LoginNameFilter"
               asp-route-identityName="@Model.IdentityNameFilter"
               asp-route-firstName="@Model.FirstNameFilter"
               asp-route-lastName="@Model.LastNameFilter"
               class="btn btn-default float-right @nextDisabled">Next</a>

        </section>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.js"></script>
    <script>
        $("#rolesForm input").change(function () {
            if ($(this).prop("checked")){
                $(this).prop("value", true.toString());
            } else {
                $(this).prop("value", false.toString());
            }
        });

        $("#loginsTable tbody tr").click(event => {
            var tableData = $(event.currentTarget).children("td");
            $("#rolesForm fieldset").prop("disabled", false);
            $("#rolesLoginName").val(tableData[0].textContent);

            $.ajax({
                type: "GET",
                url: "/Identity/Roles?loginName=" + tableData[0].textContent,
                success: result => {
                    $("#isUserCheckBox").prop("checked", result.isUser);
                    $("#isUserCheckBox").prop("value", result.isUser.toString());

                    $("#isManagerCheckBox").prop("checked", result.isManager);
                    $("#isManagerCheckBox").prop("value", result.isManager.toString());

                    $("#isAdminCheckBox").prop("checked", result.isAdmin);
                    $("#isAdminCheckBox").prop("value", result.isAdmin.toString());
                    console.log(result);
                },
                error: () => {
                    alert("Failed to receive the Data");
                    console.log("Failed");
                }
            })
            
            $("#rolesFormHeader").html("Roles for " + tableData[0].textContent);
        });

        $("#rolesFormSubmit").on("click", event => {
            var data = $("#rolesForm").serialize();
            console.log(data);
            alert(data);
            $.ajax({
                type: "POST",
                url: "/Identity/Roles",
                contentType: "application/x-www-form-urlencoded; charset=UTF-8",
                data: data,
                success: result => {
                    alert("Successfully updated the roles");
                    console.log(result);
                },
                error: () => {
                    alert("Failed to update the roles");
                    console.log("Failed");
                }
            })
        })

        $(document).ready(function () {
            $('#loginsTable').DataTable();
        });

    </script>
}